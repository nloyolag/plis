1. A small program with one word comment.
=============================================

;; yeah
COMMENT

2. A small program with one line comment.
=============================================

;; yeah yeah yeaaaaah
COMMENT

3. A small program with variable definition.
=============================================

(let x 15)
LPAREN LET WHITESPACE LPAREN ATOM WHITESPACE NUMBER RPAREN RPAREN

4. A small program with constant definition.
=============================================

(define X 10)
LPAREN DEFINE WHITESPACE ATOM WHITESPACE NUMBER RPAREN

5. A small program with strings.
=============================================

"string1" "string2"
STRING WHITESPACE STRING

6. A small program with all the data types.
=============================================

"string" 123 atom
STRING WHITESPACE NUMBER WHITESPACE ATOM

7. A small program with the loop and conditional instruction.
=============================================

(define (sum x)
    (cond
        ((== X 0) 0)
        ((!= X 0) 1)
    )
)
LPAREN DEFINE WHITESPACE LPAREN ATOM WHITESPACE ATOM RPAREN
IGNORE WHITESPACE WHITESPACE WHITESPACE WHITESPACE LPAREN
COND IGNORE WHITESPACE WHITESPACE WHITESPACE WHITESPACE
WHITESPACE WHITESPACE WHITESPACE WHITESPACE LPAREN LPAREN
EQEQ WHITESPACE ATOM WHITESPACE NUMBER RPAREN WHITESPACE
NUMBER RPAREN IGNORE WHITESPACE WHITESPACE WHITESPACE
WHITESPACE WHITESPACE WHITESPACE WHITESPACE WHITESPACE
LPAREN PLUS WHITESPACE LPAREN ATOM WHITESPACE LPAREN MINUS
WHITESPACE ATOM WHITESPACE NUMBER RPAREN RPAREN WHITESPACE
NUMBER RPAREN IGNORE WHITESPACE WHITESPACE WHITESPACE
WHITESPACE RPAREN

8. A small program with the input and output instruction.
=============================================

(print read)
LPAREN PRINT WHITESPACE READ RPAREN

9. A program with all the instructions you have defined.
=============================================

(+ 2 2)
(- 4 2)
(/ 4 2)
(* 2 1)
(== 5 5)
(!= 4 5)
(>= 5 4)
(<= 4 5)
(> 5 4)
(< 4 5)

LPAREN PLUS WHITESPACE NUMBER WHITESPACE NUMBER RPAREN
IGNORE LPAREN MINUS WHITESPACE NUMBER WHITESPACE NUMBER
RPAREN IGNORE LPAREN DIVIDE WHITESPACE NUMBER WHITESPACE
NUMBER RPAREN IGNORE LPAREN MULT WHITESPACE NUMBER
WHITESPACE NUMBER RPAREN IGNORE LPAREN EQEQ WHITESPACE
NUMBER WHITESPACE NUMBER RPAREN IGNORE LPAREN NE
WHITESPACE NUMBER WHITESPACE NUMBER RPAREN IGNORE LPAREN
GE WHITESPACE NUMBER WHITESPACE NUMBER RPAREN IGNORE
LPAREN LE WHITESPACE NUMBER WHITESPACE NUMBER RPAREN
IGNORE LPAREN GT WHITESPACE NUMBER WHITESPACE NUMBER
RPAREN IGNORE LPAREN LT WHITESPACE NUMBER WHITESPACE
NUMBER RPAREN

10. A small program with a variable definition on the wrong place and in the wrong order.
=============================================

(let (15 x))
LPAREN LET WHITESPACE LPAREN NUMBER WHITESPACE ATOM RPAREN RPAREN

11. A small program using a string, variable and constant on a place that is not allowed.
=============================================

(define X 3)
(let (y 15))
(+ X "yeah")
(- "un" y)
LPAREN DEFINE WHITESPACE ATOM WHITESPACE NUMBER RPAREN
IGNORE LPAREN LET WHITESPACE LPAREN ATOM WHITESPACE
NUMBER RPAREN RPAREN IGNORE LPAREN PLUS WHITESPACE
ATOM WHITESPACE STRING RPAREN IGNORE
LPAREN MINUS WHITESPACE STRING WHITESPACE ATOM RPAREN IGNORE

12. A small program with a loop defined using a wrong grammar.
=============================================

(define (sum x)
    ([]
        ((== X 0) 0)
        (+ (sum (- x 1)) 1)
    )
)
LPAREN DEFINE WHITESPACE LPAREN ATOM WHITESPACE ATOM
RPAREN IGNORE WHITESPACE WHITESPACE WHITESPACE
WHITESPACE LPAREN ERROR ERROR IGNORE WHITESPACE
WHITESPACE WHITESPACE WHITESPACE WHITESPACE
WHITESPACE WHITESPACE WHITESPACE LPAREN LPAREN
EQEQ WHITESPACE ATOM WHITESPACE NUMBER RPAREN
WHITESPACE NUMBER RPAREN IGNORE WHITESPACE WHITESPACE
WHITESPACE WHITESPACE WHITESPACE WHITESPACE WHITESPACE
WHITESPACE LPAREN PLUS WHITESPACE LPAREN ATOM WHITESPACE
LPAREN MINUS WHITESPACE ATOM WHITESPACE NUMBER RPAREN
RPAREN WHITESPACE NUMBER RPAREN IGNORE WHITESPACE
WHITESPACE WHITESPACE WHITESPACE RPAREN IGNORE
RPAREN
